{"meta":{"title":"Savepoint","subtitle":null,"description":"我永远喜欢人外","author":null,"url":"https://savepointlog.github.io"},"pages":[{"title":"About","date":"2016-12-10T12:03:23.000Z","updated":"2018-08-13T12:15:46.000Z","comments":false,"path":"about/index.html","permalink":"https://savepointlog.github.io/about/index.html","excerpt":"","text":"Photo by Alex Knight on Unsplash About Me刀背击打，混乱中立。萌、雷点都很拧巴，腿肉看心情割。"}],"posts":[{"title":"《存档点》 Q&A","slug":"QNA","date":"2018-08-14T01:55:00.000Z","updated":"2019-04-20T09:45:27.259Z","comments":true,"path":"posts/savepoint/QNA/","link":"","permalink":"https://savepointlog.github.io/posts/savepoint/QNA/","excerpt":"关于《存档点》的问题及解答，持续更新中。","text":"输入密码以继续阅读。 Incorrect Password! No content to display! ","categories":[{"name":"存档点","slug":"savepoint","permalink":"https://savepointlog.github.io/categories/savepoint/"}],"tags":[{"name":"ChoiceScript","slug":"ChoiceScript","permalink":"https://savepointlog.github.io/tags/ChoiceScript/"},{"name":"存档点","slug":"savepoint","permalink":"https://savepointlog.github.io/tags/savepoint/"},{"name":"Q&A","slug":"Q-A","permalink":"https://savepointlog.github.io/tags/Q-A/"}]},{"title":"ChoiceScript 简介","slug":"introduction_to_choicescript","date":"2018-08-14T01:55:00.000Z","updated":"2019-04-20T09:46:09.635Z","comments":true,"path":"posts/Choicescript-官方文档/introduction_to_choicescript/","link":"","permalink":"https://savepointlog.github.io/posts/Choicescript-官方文档/introduction_to_choicescript/","excerpt":"ChoiceScript 简介对程序设计语言 ChoiceScript 的基本指南。如果对该文档有疑问，请在 ChoiceScript google group 提出。","text":"ChoiceScript 简介对程序设计语言 ChoiceScript 的基本指南。如果对该文档有疑问，请在 ChoiceScript google group 提出。 ChoiceScript 是什么？ChoiceScript 是一个简单的程序设计语言，用于制作像 Choice of the Dragon 这样的选择类游戏。用 ChoiceScript 写游戏轻松又有趣，即使对于没有编程经验的人来说，也同样如此。 试一把首先， 从 GitHub 下载 ChoiceScript 的源文件，将 zip 文件解压缩，打开 web/index.html，游戏立刻就开始运行了。 （你也可以在 ChoiceScript github page 浏览我们的文件和文件 bug ，或者在我们更新 ChoiceScript 时收到通知。） 你的第一幕： *choice 和 *finish这是用 ChoiceScript 写出的简单的一幕。你可以在 web/mygame/startup.txt 中查看。 `陛下，您的子民饥肠辘辘、流落街头，嚷着要造反。您盘踞西方的敌人虽然力量不足为惧，但也威胁要在不久后进攻。您打算怎么做呢？ *choice #先发制人，对西方发动战争。 您如果能占据他们的土地，国家就能繁荣昌盛。但您的军队士气低迷，王国军械也供给不足。怎么才能赢得战争呢？ *choice #像驱使奴隶一样驱使农民。只要他们足够拼命，我们就能取得胜利。 不幸的是，这样不会对士气有任何助益。您的军队很快叛变，王国也落到西方的野蛮人手中。 *finish #封给有领导魅力的骑士土地、人民和物资。 您的子民足智多谋。骑士们赢得了战争， 但请您小心：他们可能很快就会要求组建议会了。 *finish #在夜深人静时偷走敌人的食物和武器。 真是个狡猾的计划。很快您的军队就与西方人势均力敌了。他们目前放弃了侵略，但这是必然发生之事，您再怎么拖延，能拖延到什么时候呢？ *finish #Beat swords to plowshares and trade food to the westerners for protection. The westerners have you at the point of a sword. They demand unfair terms from you. *choice #Accept the terms for now. Eventually, the barbarian westerners conquer you anyway, destroying their bread basket, and the entire region starves. *finish #Threaten to salt our fields if they don&apos;t offer better terms. They blink. Your majesty gets a fair price for wheat. *finish #Abdicate the throne. I have clearly mismanaged this kingdom! The kingdom descends into chaos, but you manage to escape with your own hide. Perhaps in time you can return to restore order to this fair land. *finish` As you can see, the *choice command presents the user with a list of options; the result of choosing each option appears indented right below the option (in an “indented block”). If you go to play this scene, you’ll first be presented with three options: Make pre-emptive war on the western lands. Beat swords to plowshares and trade food to the westerners for protection. Abdicate the throne. I have clearly mismanaged this kingdom! If you choose option #1, you get to choose how to win the war. If you choose option #2, you may decide how to negotiate with the westerners. If you choose option #3, the scene ends with no additional choices. As you can see, there’s a lot you can do with just the *choice command and the *finish command. Indeed, using only these two commands and a lot of time, you could develop an entire “Choose Your Own Adventure” book! Go On, Play with It!Try opening up web/mygame/startup.txt in a simple text editor like Notepad or TextEdit. If you change the text, save the file, and refresh the web/mygame/index.html page in your browser, you should be able to see the effect of your changes immediately. IndentationNote that indentation in ChoiceScript is mandatory. Without those spaces for indentation, we would have no way to tell the difference between options nested within other choices and options on the main menu. You can indent blocks using spaces or with the Tab character (but not both in the same file). You can use any number of spaces you want, but you must be consistent. Code like this is not allowed:` *choice #Hold &apos;em. He calls; you win! *finish #Fold &apos;em. Better luck next time. *finish `Option 1 has four spaces, but Option 2 has six spaces; since these don’t line up, ChoiceScript will display an error message if you try to write scenes like this. Reusing Code: Goto and LabelChoiceScript provides a way to jump around in a scene besides just making choices. You can use the *goto command to jump to any line in the scene, as long as you first put a *label on the line you want to reach. `What kind of animal will you be? *choice #Lion *goto claws #Tiger *label claws In that case, you&apos;ll have powerful claws and a mighty roar! *finish #Elephant Well, elephants are interesting animals, too. *finish` When we reach the line *goto claws, we automatically jump to the line *label claws. You may create as many labels as you like, and use *goto to reach any of them. Note that every indented (nested) block must conclude with either a *finish command (which ends the scene) or a *goto line which jumps to another line in the scene. (You can also reuse code with the *goto_scene command, described later in this document.) Setting and Checking VariablesIn ChoiceScript, you can use variables to make scenes and decisions more interesting than a “Choose Your Own Adventure” book. To use a variable, you must begin by defining it and setting it, like this: *temp leadership *set leadership 20 TODO: Discuss *create vs. *temp. We will probably remove the *create command in the future, replacing it with something in mygame.js; we should document what the new thing will be. (The basic idea is that *temp variables only last for the current scene, whereas permanent variables persist through the entire game.) Once a variable has been set, you can check the value of the variable like this: #Run for class president *if leadership &gt; 15 You win the election. *finish You lose the election. *finish In this case, leadership is just set to 20, so the player is sure to win the election. But you can choose to give the player a different amount of leadership depending on the player’s earlier choices. Using variables, the player’s earlier leadership choices can have an effect on the story later in the game. You can also add leadership points to the current number of leadership points, like this: *set leadership +20 This would add 20 points to the player’s current leadership score. It’s the same thing as writing *set leadership leadership+20. You can also subtract points with “-“, multiply with “*” or divide with “/“. If you need to use multiple operators at once (e.g. you need to do both division and addition), you must use parentheses, like this: *set honesty (leadership + manners)*2. You may not omit the paretheses, even though it’s perfectly understandable arithmetic: *set honesty leadership + manners / 2. You can also show the player’s current leadership score by using ${} (a dollar sign followed by curly braces), like this: Your leadership score is: ${leadership} By the way, variables aren’t just for numbers. You can also put text in a variable by using quotation marks: *set lover_name &quot;Jamie&quot; Using *else and *elseif to Improve ReadabilityWe can rewrite the leadership example above to use the *else command; this will make it easier to read. #Run for class president *if leadership &gt; 15 You win the election. *finish *else You lose the election. *finish This does exactly the same thing as before, but using *else makes it clearer that only one of these two options is possible, just by indenting the code. You can also use the *elseif command to define three possible branches, like this: #Run for class president *if leadership &gt; 25 You win the election by a landslide! *finish *elseif leadership &gt; 15 You win the election, but just barely. *finish *else You lose the election. *finish What Happens When We *finish?When we *finish, we move on to the next scene in the game. This is defined in a file called mygame.js. Here’s an example: // Specify the list of scenes here, separated by commas, with no final comma nav = new SceneNavigator([ &quot;startup&quot; ,&quot;animal&quot; ,&quot;variables&quot; ,&quot;ending&quot; ,&quot;death&quot; ]); // Specify the default starting stats here stats = { leadership: 50 ,strength: 50 }; // Specify the stats to use in debug mode debugStats = { leadership: 50 ,strength: 50 }; // or just use defaults // debugStats = stats The first section defines the scene “navigator,” which describes how we move from scene to scene. If you *finish in the “startup” scene, we’ll move right ahead to the “animal” scene, then the “variables” scene. Finally, we reach the ending scene. Here’s an example ending scene: This is the last scene! The game is over! *ending That final *ending command instructs the game to insert a “Play Again” button at the end of the scene. If you choose to “Play Again”, the game will begin again at the “startup” scene. WARNING: mygame.js is likely to change considerably very soon. It’s currently the absolute minimum amount of code that could possibly work; we’d like it to be in a nicer format that looks more like ChoiceScript and less like JavaScript. (Note that Choice of the Dragon doesn’t even have a mygame.js file; that feature was developed after CotD was released. You can see something similar in its index.html file.) You’re not required to use *finish to move on to the next scene; you can also jump to any scene in the game using *goto_scene. Here’s an example: #Lift weights *if strength &gt; 15 You lift the weights. *finish You drop the weights and hurt yourself badly. You never recover. *goto_scene death When this happens, we jump directly to the death scene. This allows you to provide a standard “death” message without copying and pasting all over the game. ExamplesHere some example scenes from Choice of the Dragon. Please don’t copy their code without explicit permission from Choice of Games. startup* queenpolitics Next: Other Commands and Tricks","categories":[{"name":"Choicescript 官方文档","slug":"Choicescript-官方文档","permalink":"https://savepointlog.github.io/categories/Choicescript-官方文档/"}],"tags":[{"name":"ChoiceScript","slug":"ChoiceScript","permalink":"https://savepointlog.github.io/tags/ChoiceScript/"},{"name":"翻译","slug":"translation","permalink":"https://savepointlog.github.io/tags/translation/"}]}]}